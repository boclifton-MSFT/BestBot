{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.35.1.17967",
      "templateHash": "18133317569870467167"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region to deploy to"
      }
    },
    "environmentName": {
      "type": "string",
      "metadata": {
        "description": "Azd environment name"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "azd-env-name": "[parameters('environmentName')]"
      },
      "metadata": {
        "description": "Tags to apply to resources"
      }
    },
    "vnetAddressSpace": {
      "type": "string",
      "defaultValue": "10.42.0.0/16",
      "metadata": {
        "description": "Virtual network address space"
      }
    },
    "functionSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.42.1.0/24",
      "metadata": {
        "description": "Subnet prefix for Azure Functions integration (delegated to Microsoft.Web/serverFarms)"
      }
    },
    "privateEndpointsSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.42.10.0/24",
      "metadata": {
        "description": "Subnet prefix for private endpoints"
      }
    },
    "instanceMemoryMB": {
      "type": "int",
      "defaultValue": 512,
      "allowedValues": [
        512,
        2048,
        4096
      ],
      "metadata": {
        "description": "Instance memory size for Flex Consumption plan (MB). Supported values: 512, 2048, 4096"
      }
    },
    "maximumInstanceCount": {
      "type": "int",
      "defaultValue": 40,
      "minValue": 40,
      "maxValue": 1000,
      "metadata": {
        "description": "Maximum number of Flex Consumption instances (allowed range 40-1000)."
      }
    }
  },
  "variables": {
    "resourceToken": "[uniqueString(subscription().id, resourceGroup().id, parameters('location'), parameters('environmentName'))]",
    "planName": "[format('az-asp-{0}', variables('resourceToken'))]",
    "aiName": "[format('az-ai-{0}', variables('resourceToken'))]",
    "siteName": "[format('az-func-{0}', variables('resourceToken'))]",
    "uamiName": "[format('az-umi-{0}', variables('resourceToken'))]",
    "lawName": "[format('az-law-{0}', variables('resourceToken'))]",
    "storageBase": "[toLower(replace(format('azst{0}', variables('resourceToken')), '-', ''))]",
    "storageName": "[if(greater(length(variables('storageBase')), 24), substring(variables('storageBase'), 0, 24), variables('storageBase'))]",
    "deploymentContainerName": "[format('deploy-{0}', variables('resourceToken'))]",
    "vnetName": "[format('vnet-{0}', variables('resourceToken'))]",
    "functionSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'function')]",
    "privateEndpointSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'private-endpoints')]",
    "storageDnsSuffix": "[environment().suffixes.storage]",
    "storagePrivateDnsZones": [
      {
        "name": "[format('privatelink.blob.{0}', variables('storageDnsSuffix'))]",
        "group": "blob"
      },
      {
        "name": "[format('privatelink.queue.{0}', variables('storageDnsSuffix'))]",
        "group": "queue"
      },
      {
        "name": "[format('privatelink.table.{0}', variables('storageDnsSuffix'))]",
        "group": "table"
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-05-01",
      "name": "[variables('storageName')]",
      "location": "[parameters('location')]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "defaultToOAuthAuthentication": true,
        "supportsHttpsTrafficOnly": true,
        "publicNetworkAccess": "Disabled",
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Deny"
        }
      },
      "tags": "[parameters('tags')]"
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/default/{1}', variables('storageName'), variables('deploymentContainerName'))]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2023-09-01",
      "name": "[variables('lawName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30
      },
      "tags": "[parameters('tags')]"
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('aiName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('lawName'))]"
      },
      "tags": "[parameters('tags')]",
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('lawName'))]"
      ]
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[variables('uamiName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]"
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-09-01",
      "name": "[variables('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressSpace')]"
          ]
        },
        "subnets": [
          {
            "name": "function",
            "properties": {
              "addressPrefix": "[parameters('functionSubnetPrefix')]",
              "delegations": [
                {
                  "name": "functions-delegation",
                  "properties": {
                    "serviceName": "Microsoft.Web/serverFarms"
                  }
                }
              ]
            }
          },
          {
            "name": "private-endpoints",
            "properties": {
              "addressPrefix": "[parameters('privateEndpointsSubnetPrefix')]",
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ]
      },
      "tags": "[parameters('tags')]"
    },
    {
      "copy": {
        "name": "dnsZones",
        "count": "[length(variables('storagePrivateDnsZones'))]"
      },
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "[variables('storagePrivateDnsZones')[copyIndex()].name]",
      "location": "global",
      "properties": {}
    },
    {
      "copy": {
        "name": "dnsZoneLinks",
        "count": "[length(variables('storagePrivateDnsZones'))]"
      },
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}-link', variables('storagePrivateDnsZones')[copyIndex()].name, variables('vnetName'))]",
      "location": "global",
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', variables('storagePrivateDnsZones')[copyIndex()].name)]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ]
    },
    {
      "copy": {
        "name": "storagePrivateEndpoints",
        "count": "[length(variables('storagePrivateDnsZones'))]"
      },
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2023-09-01",
      "name": "[format('pe-{0}-{1}', variables('storagePrivateDnsZones')[copyIndex()].group, variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "properties": {
        "subnet": {
          "id": "[variables('privateEndpointSubnetId')]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "[format('storage-{0}', variables('storagePrivateDnsZones')[copyIndex()].group)]",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
              "groupIds": [
                "[variables('storagePrivateDnsZones')[copyIndex()].group]"
              ]
            }
          }
        ]
      },
      "tags": "[parameters('tags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
      ]
    },
    {
      "copy": {
        "name": "storagePrivateEndpointDnsGroups",
        "count": "[length(variables('storagePrivateDnsZones'))]"
      },
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2020-05-01",
      "name": "[format('{0}/zone-group', format('pe-{0}-{1}', variables('storagePrivateDnsZones')[copyIndex()].group, variables('resourceToken')))]",
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "[format('storage-{0}', variables('storagePrivateDnsZones')[copyIndex()].group)]",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('storagePrivateDnsZones')[copyIndex()].name)]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', variables('storagePrivateDnsZones')[copyIndex()].name)]",
        "[resourceId('Microsoft.Network/privateEndpoints', format('pe-{0}-{1}', variables('storagePrivateDnsZones')[copyIndex()].group, variables('resourceToken')))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2024-04-01",
      "name": "[variables('planName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "FC1",
        "tier": "FlexConsumption"
      },
      "properties": {
        "reserved": true
      },
      "tags": "[parameters('tags')]"
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2024-04-01",
      "name": "[variables('siteName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp,linux",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName')))]": {}
        }
      },
      "properties": {
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]",
        "virtualNetworkSubnetId": "[variables('functionSubnetId')]",
        "reserved": true,
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage__accountName",
              "value": "[variables('storageName')]"
            },
            {
              "name": "AzureWebJobsStorage__clientId",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName')), '2023-01-31').clientId]"
            },
            {
              "name": "AzureWebJobsStorage__blobServiceUri",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2023-05-01').primaryEndpoints.blob]"
            },
            {
              "name": "AzureWebJobsStorage__queueServiceUri",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2023-05-01').primaryEndpoints.queue]"
            },
            {
              "name": "AzureWebJobsStorage__tableServiceUri",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2023-05-01').primaryEndpoints.table]"
            },
            {
              "name": "AzureWebJobsStorage__accountResourceId",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
            },
            {
              "name": "AzureWebJobsStorage__credential",
              "value": "managedidentity"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('aiName')), '2020-02-02').ConnectionString]"
            },
            {
              "name": "APPLICATIONINSIGHTS_AUTHENTICATION_STRING",
              "value": "Authorization=AAD"
            },
            {
              "name": "WEBSITE_VNET_ROUTE_ALL",
              "value": "1"
            }
          ],
          "http20Enabled": true,
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "scmIpSecurityRestrictionsUseMain": true
        },
        "functionAppConfig": {
          "deployment": {
            "storage": {
              "type": "blobContainer",
              "value": "[format('{0}{1}', reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2023-05-01').primaryEndpoints.blob, variables('deploymentContainerName'))]",
              "authentication": {
                "type": "UserAssignedIdentity",
                "userAssignedIdentityResourceId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName'))]"
              }
            }
          },
          "runtime": {
            "name": "dotnet-isolated",
            "version": "9.0"
          },
          "scaleAndConcurrency": {
            "instanceMemoryMB": "[parameters('instanceMemoryMB')]",
            "maximumInstanceCount": "[parameters('maximumInstanceCount')]"
          }
        }
      },
      "tags": "[union(parameters('tags'), createObject('azd-service-name', 'functionapp'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('aiName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', split(format('{0}/default/{1}', variables('storageName'), variables('deploymentContainerName')), '/')[0], split(format('{0}/default/{1}', variables('storageName'), variables('deploymentContainerName')), '/')[1], split(format('{0}/default/{1}', variables('storageName'), variables('deploymentContainerName')), '/')[2])]",
        "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Web/sites/{0}', variables('siteName'))]",
      "name": "azdiag",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('lawName'))]",
        "logs": [
          {
            "category": "FunctionAppLogs",
            "enabled": true,
            "retentionPolicy": {
              "enabled": false,
              "days": 0
            }
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true,
            "retentionPolicy": {
              "enabled": false,
              "days": 0
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('lawName'))]",
        "[resourceId('Microsoft.Web/sites', variables('siteName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/tags",
      "apiVersion": "2021-04-01",
      "name": "default",
      "properties": {
        "tags": "[parameters('tags')]"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('storageName'))]",
      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), 'b7e6dc6d-f1e8-4753-8033-0f276bb0955b', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName')))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b7e6dc6d-f1e8-4753-8033-0f276bb0955b')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName')), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('storageName'))]",
      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '974c5e8b-45b9-4653-ba55-5f855dd0fb88', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName')))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '974c5e8b-45b9-4653-ba55-5f855dd0fb88')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName')), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('storageName'))]",
      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '0a9a7e1f-b9d0-4cc4-a60d-0319b160aaa3', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName')))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '0a9a7e1f-b9d0-4cc4-a60d-0319b160aaa3')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName')), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceGroup().id, '3913510d-42f4-4e42-8a64-420c390055eb', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName')))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName')), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName'))]"
      ]
    }
  ],
  "outputs": {
    "functionAppName": {
      "type": "string",
      "value": "[variables('siteName')]"
    },
    "functionAppResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Web/sites', variables('siteName'))]"
    },
    "zipDeployEndpoint": {
      "type": "string",
      "value": "[format('https://{0}.scm.azurewebsites.net/api/zipdeploy', variables('siteName'))]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageName')]"
    },
    "managedIdentityClientId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName')), '2023-01-31').clientId]"
    },
    "vnetNameOut": {
      "type": "string",
      "value": "[variables('vnetName')]"
    },
    "vnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
    },
    "functionSubnetResourceId": {
      "type": "string",
      "value": "[variables('functionSubnetId')]"
    },
    "privateEndpointSubnetResourceId": {
      "type": "string",
      "value": "[variables('privateEndpointSubnetId')]"
    },
    "privateDnsZonesOut": {
      "type": "array",
      "copy": {
        "count": "[length(variables('storagePrivateDnsZones'))]",
        "input": "[variables('storagePrivateDnsZones')[copyIndex()].name]"
      }
    }
  }
}
